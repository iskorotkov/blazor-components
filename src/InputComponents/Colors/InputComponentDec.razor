@inject IJSRuntime JS

<input type="number" min="@Min" max="@Max" class="color-picker__component-input" value="@Value"
       @ref="@_reference" @oninput="@OnValueChanged" />

@code {
    [Parameter]
    public int Value { get; set; }

    [Parameter]
    public EventCallback<int> ValueChanged { get; set; }

    private readonly int Min = 0;
    private readonly int Max = 255;

    private ElementReference _reference;

    private async Task OnValueChanged(ChangeEventArgs args)
    {
        if (int.TryParse(args.Value.ToString(), out var num))
        {
            var clamped = Math.Clamp(num, Min, Max);
            Value = clamped;
        }
        else
        {
            Value = Min;
        }

        await JS.InvokeVoidAsync("setElementValue", _reference, "value", Value);

        if (ValueChanged.HasDelegate)
        {
            await ValueChanged.InvokeAsync(Value);
        }
    }
}
